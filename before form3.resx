<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYa
        HSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCACOALQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5w8N7JtSU3jqsKDcSwGM++R+lO8QanFc3O2wgjit4/lUiNQze
        54qtp0kcNjds+4ythIgDjBPUn8OPxqtIgZvlB9OlADfPf1H5CrFuzMOSCfoKgWCV2Ijjd8HB2rnFTC3l
        icrIpUr1B6igCzvIXaFQ577RVuCyaaUCUhUbkbVArPywwRWlaPJIF5+7QAwTixu7u1W1WZ3OxGcAlF74
        46n1qz4+sLhZbTU49PW00q4RYLfYoALRoocNjq2Tkk9c10mippNpFJr2qkyBB5AhQfM02Dt+gwPvdvQ0
        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
        AKKKKACiiigD/9k=
</value>
  </data>
</root>